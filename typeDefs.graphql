scalar DateTime

enum PhotoCategory {
    SELFIE
    PORTRAIT
    ACTION
    LANDSCAPE
    GRAPHIC
}

input PostPhotoInput {
    name: String!
    category: PhotoCategory=PORTRAIT
    description: String
}

type User {
    githubLogin: ID!
    name: String
    avatar: String
    postedPhotos: [Photo!]!
    inPhotos: [Photo!]!
}

type Photo {
    id: ID!
    url: String!
    name: String!
    description: String
    category: PhotoCategory
    postedBy: User!
    taggedUsers: [User!]!
    created: DateTime!
}

type AuthPayload {
    token: String!
    user: User!
}

type Query{
    me: User
    totalPhotos: Int!
    allPhotos(after: DateTime):[Photo!]!
    Photo(id: ID!): Photo
    totalUsers: Int!
    allUsers: [User!]!
    User(login: ID!):User
}

type Mutation {
    postPhoto(input: PostPhotoInput!): Photo!
    tagPhoto(
        githubLogin: ID!
        photoID: ID!
    ):Photo!
    githubAuth(code:String!):AuthPayload!
    addFakeUsers(count: Int = 1):[User!]!
    fakeUserAuth(githubLogin: ID!):AuthPayload!
}
